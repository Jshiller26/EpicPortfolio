'use client';

import { useMemo } from 'react';

export type ProxyState = 'ALL_ORIGINS' | 'CORS' | 'WAYBACK_MACHINE';

interface ContextMenuCapture {
  onContextMenuCapture?: (event: React.MouseEvent) => void;
}

const useProxyMenu = (
  proxyState: ProxyState,
  setProxyState: React.Dispatch<React.SetStateAction<ProxyState>>
): ContextMenuCapture => {
  return useMemo<ContextMenuCapture>(
    () => ({
      onContextMenuCapture: (event) => {
        event.preventDefault();
        
        const states: ProxyState[] = ['CORS', 'ALL_ORIGINS', 'WAYBACK_MACHINE'];
        const currentIndex = states.indexOf(proxyState);
        const nextIndex = (currentIndex + 1) % states.length;
        
        setProxyState(states[nextIndex]);
        console.log('Proxy set to:', states[nextIndex]);
      },
    }),
    [proxyState, setProxyState]
  );
};

export default useProxyMenu;